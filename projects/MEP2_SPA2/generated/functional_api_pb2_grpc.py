# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import common_pb2 as common__pb2
import functional_api_pb2 as functional__api__pb2


class FunctionalServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.OpenPassWindow = channel.unary_unary(
        '/base.FunctionalService/OpenPassWindow',
        request_serializer=common__pb2.ClientId.SerializeToString,
        response_deserializer=common__pb2.Empty.FromString,
        )
    self.ClosePassWindow = channel.unary_unary(
        '/base.FunctionalService/ClosePassWindow',
        request_serializer=common__pb2.ClientId.SerializeToString,
        response_deserializer=common__pb2.Empty.FromString,
        )
    self.SetFanSpeed = channel.unary_unary(
        '/base.FunctionalService/SetFanSpeed',
        request_serializer=functional__api__pb2.SenderInfo.SerializeToString,
        response_deserializer=common__pb2.Empty.FromString,
        )
    self.SubscribeToFanSpeed = channel.unary_stream(
        '/base.FunctionalService/SubscribeToFanSpeed',
        request_serializer=functional__api__pb2.SubscriberRequest.SerializeToString,
        response_deserializer=functional__api__pb2.Value.FromString,
        )


class FunctionalServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def OpenPassWindow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClosePassWindow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetFanSpeed(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeToFanSpeed(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FunctionalServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'OpenPassWindow': grpc.unary_unary_rpc_method_handler(
          servicer.OpenPassWindow,
          request_deserializer=common__pb2.ClientId.FromString,
          response_serializer=common__pb2.Empty.SerializeToString,
      ),
      'ClosePassWindow': grpc.unary_unary_rpc_method_handler(
          servicer.ClosePassWindow,
          request_deserializer=common__pb2.ClientId.FromString,
          response_serializer=common__pb2.Empty.SerializeToString,
      ),
      'SetFanSpeed': grpc.unary_unary_rpc_method_handler(
          servicer.SetFanSpeed,
          request_deserializer=functional__api__pb2.SenderInfo.FromString,
          response_serializer=common__pb2.Empty.SerializeToString,
      ),
      'SubscribeToFanSpeed': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeToFanSpeed,
          request_deserializer=functional__api__pb2.SubscriberRequest.FromString,
          response_serializer=functional__api__pb2.Value.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'base.FunctionalService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
