/*********************************************************************************/



Copyright Â© 2021 Volvo Car Corporation. All rights reserved.



NOTICE: This file contains material that is confidential and confidential to Volvo Cars and/or other developers. No license is granted under any intellectual or industrial property rights of Volvo Cars except as may be provided in an agreement with Volvo Cars. Any unauthorized copying or distribution of content from this file is prohibited.



**********************************************************************************/


# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import protogenerated.common_pb2 as common__pb2


class SystemServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfiguration = channel.unary_unary(
                '/base.SystemService/GetConfiguration',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Configuration.FromString,
                )
        self.ListSignals = channel.unary_unary(
                '/base.SystemService/ListSignals',
                request_serializer=common__pb2.NameSpace.SerializeToString,
                response_deserializer=common__pb2.Frames.FromString,
                )


class SystemServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSignals(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SystemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfiguration,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Configuration.SerializeToString,
            ),
            'ListSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSignals,
                    request_deserializer=common__pb2.NameSpace.FromString,
                    response_serializer=common__pb2.Frames.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'base.SystemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SystemService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/base.SystemService/GetConfiguration',
            common__pb2.Empty.SerializeToString,
            common__pb2.Configuration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/base.SystemService/ListSignals',
            common__pb2.NameSpace.SerializeToString,
            common__pb2.Frames.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
